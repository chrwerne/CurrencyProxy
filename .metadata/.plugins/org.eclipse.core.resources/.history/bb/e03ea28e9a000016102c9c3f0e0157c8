package net.interact.web;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.google.gson.Gson;

@WebServlet("/Currencies")
public class Currencies extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public Currencies() {
		super();
	}

	public void init(ServletConfig config) throws ServletException {
	}

	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {

		try{
			String language = request.getParameter("Language");
			String year = request.getParameter("Year");
			String month = request.getParameter("Month");

			System.out.println("Currency proxy called on <"+(new Date())+"> <language:"+language+"> <year:"+year+"> <month:"+month+">");

			String currencyString = callInforeur(language, year, month);
			List<Currency> currencies = deserialize(currencyString);
			String csv = buildCsv(currencies);

			response.setStatus(HttpServletResponse.SC_OK);
			response.setCharacterEncoding("UTF-8");
			response.setContentType("text/csv");
			String filename = "attachment; filename=currencies_"+year+"_"+"month"+"_"+language+".csv";
			response.setHeader("Content-Disposition", filename);

			PrintWriter out = response.getWriter();
			out.println(csv);
			
		}catch(Exception ex){
			ex.printStackTrace();
			response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
		}
		

	}

	private String callInforeur(String language, String year, String month) {
		String currencyString = null;
		
		try {
			String urlString = "http://ec.europa.eu/budg/inforeuro/api/public/monthly-rates?year=##year##&month=##month##&lang=##lang##";
			urlString.replace("#lang#", language);
			urlString.replace("#year#", year);
			urlString.replace("#month#", month);
			
			URL url = new URL(urlString);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setRequestMethod("GET");
			conn.setRequestProperty("Accept", "application/json");

			if (conn.getResponseCode() != 200) {
				//TODO: handle properly
				throw new RuntimeException("Failed : HTTP error code : "+ conn.getResponseCode());
			}

			BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream()), "UTF-8"));

			String output;
			while ((output = br.readLine()) != null) {
				if(output!=null)currencyString = output;
			}
			conn.disconnect();

		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

		return currencyString;
	}
	
	private List<Currency> deserialize(String input){
		Gson gson = new Gson();
		Currency[] currencyArray = gson.fromJson(input, Currency[].class);
		return Arrays.asList(currencyArray);
	}
	
	private String buildCsv(List<Currency> currencies){
		StringBuilder sb = new StringBuilder();
		
		for(Currency c: currencies){
			sb.append(
					c.getComment()).append(";")
					.append(c.getIsoA3Code()).append(";")
					.append(c.getCountry()).append(";")
					.append(c.getIsoA2Code()).append(";")
					.append(c.getCurrency()).append(";")
					.append(c.getIsoA3Code()).append(";")
					.append(c.getValue()).append(";")
					.append("\r\n");
		}
		
		return sb.toString();
	}

}
